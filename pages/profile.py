import streamlit as st
from datetime import datetime
from supabase_utils import init_supabase_client, get_user_profile

# Thi·∫øt l·∫≠p page config
st.set_page_config(
    page_title="H·ªì s∆° H·ªçc t·∫≠p - Gia s∆∞ To√°n AI",
    page_icon="üë§",
    layout="wide"
)

def display_header(user_email: str, user_id: str, profile: dict):
    """
    Hi·ªÉn th·ªã header v·ªõi th√¥ng tin ng∆∞·ªùi d√πng
    """
    st.markdown("""
    <div style='background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); 
                padding: 2rem; 
                border-radius: 15px; 
                margin-bottom: 2rem;'>
        <h1 style='color: white; margin-bottom: 1rem; font-size: 2.5rem; text-align: center;'>
            üë§ H·ªì s∆° H·ªçc t·∫≠p c·ªßa b·∫°n
        </h1>
        <p style='color: #f0f0f0; font-size: 1.2rem; text-align: center; margin-bottom: 0;'>
            Theo d√µi ti·∫øn tr√¨nh v√† ƒëi·ªÉm y·∫øu c·∫ßn c·∫£i thi·ªán
        </p>
    </div>
    """, unsafe_allow_html=True)
    
    # Th√¥ng tin ng∆∞·ªùi d√πng trong cards
    col1, col2 = st.columns(2)
    
    with col1:
        st.markdown(f"""
        <div style='background: linear-gradient(135deg, #56ab2f 0%, #a8e6cf 100%); 
                    padding: 1.5rem; 
                    border-radius: 10px; 
                    margin-bottom: 1rem;'>
            <h3 style='color: white; margin-bottom: 0.5rem; display: flex; align-items: center;'>
                <span style='font-size: 1.5rem; margin-right: 0.5rem;'>üìß</span>
                Email
            </h3>
            <p style='color: #f0f0f0; margin-bottom: 0; font-size: 1.1rem;'>
                {user_email}
            </p>
        </div>
        """, unsafe_allow_html=True)
    
    with col2:
        updated_time = "Ch∆∞a c√≥ d·ªØ li·ªáu"
        if profile.get("updated_at"):
            try:
                updated_dt = datetime.fromisoformat(profile["updated_at"].replace("Z", "+00:00"))
                updated_time = updated_dt.strftime('%d/%m/%Y %H:%M:%S')
            except:
                updated_time = "Kh√¥ng x√°c ƒë·ªãnh"
        
        st.markdown(f"""
        <div style='background: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%); 
                    padding: 1.5rem; 
                    border-radius: 10px; 
                    margin-bottom: 1rem;'>
            <h3 style='color: white; margin-bottom: 0.5rem; display: flex; align-items: center;'>
                <span style='font-size: 1.5rem; margin-right: 0.5rem;'>üïí</span>
                C·∫≠p nh·∫≠t l·∫ßn cu·ªëi
            </h3>
            <p style='color: #f0f0f0; margin-bottom: 0; font-size: 1.1rem;'>
                {updated_time}
            </p>
        </div>
        """, unsafe_allow_html=True)

def display_weakness_and_stats(profile: dict):
    """
    Hi·ªÉn th·ªã ƒëi·ªÉm y·∫øu g·∫ßn nh·∫•t v√† th·ªëng k√™
    """
    col1, col2 = st.columns(2)
    
    with col1:
        st.markdown("## üéØ ƒêi·ªÉm y·∫øu g·∫ßn nh·∫•t")
        
        if profile.get("last_weakness"):
            st.markdown(f"""
            <div style='background: linear-gradient(135deg, #ff9a9e 0%, #fecfef 100%); 
                        padding: 1.5rem; 
                        border-radius: 10px; 
                        margin-bottom: 1rem;'>
                <h3 style='color: #8B0000; margin-bottom: 0.5rem; text-align: center;'>
                    {profile['last_weakness']}
                </h3>
                <p style='color: #2F4F4F; margin-bottom: 0; text-align: center; font-style: italic;'>
                    üí° H·ªá th·ªëng s·∫Ω ∆∞u ti√™n t·∫°o b√†i t·∫≠p v·ªÅ ch·ªß ƒë·ªÅ n√†y
                </p>
            </div>
            """, unsafe_allow_html=True)
        else:
            st.markdown("""
            <div style='background: linear-gradient(135deg, #a8edea 0%, #fed6e3 100%); 
                        padding: 1.5rem; 
                        border-radius: 10px; 
                        margin-bottom: 1rem;
                        border: 2px dashed #ccc;'>
                <h4 style='color: #666; text-align: center; margin-bottom: 0.5rem;'>
                    Ch∆∞a c√≥ d·ªØ li·ªáu ph√¢n t√≠ch
                </h4>
                <p style='color: #888; text-align: center; margin-bottom: 0;'>
                    H√£y chat v·ªõi gia s∆∞ AI ƒë·ªÉ h·ªá th·ªëng c√≥ th·ªÉ ph√¢n t√≠ch ƒëi·ªÉm y·∫øu c·ªßa b·∫°n!
                </p>
            </div>
            """, unsafe_allow_html=True)
    
    with col2:
        st.markdown("## üìä Th·ªëng k√™ t·ªïng quan")
        
        misunderstood_count = len(profile.get("misunderstood_concepts", []))
        
        # T·∫°o m√†u ƒë·ªông d·ª±a tr√™n s·ªë l∆∞·ª£ng
        if misunderstood_count == 0:
            color_gradient = "linear-gradient(135deg, #56ab2f 0%, #a8e6cf 100%)"
            text_color = "#2F4F4F"
            icon = "üéâ"
        elif misunderstood_count <= 3:
            color_gradient = "linear-gradient(135deg, #f093fb 0%, #f5576c 100%)"
            text_color = "#8B0000"
            icon = "‚ö†Ô∏è"
        else:
            color_gradient = "linear-gradient(135deg, #ff6b6b 0%, #ee5a24 100%)"
            text_color = "#ffffff"
            icon = "üî•"
        
        st.markdown(f"""
        <div style='background: {color_gradient}; 
                    padding: 1.5rem; 
                    border-radius: 10px; 
                    margin-bottom: 1rem;
                    text-align: center;'>
            <div style='display: flex; align-items: center; justify-content: center; margin-bottom: 1rem;'>
                <span style='font-size: 2rem; margin-right: 0.5rem;'>{icon}</span>
                <h3 style='color: {text_color}; margin: 0;'>
                    Kh√°i ni·ªám c·∫ßn c·∫£i thi·ªán
                </h3>
            </div>
            <div style='font-size: 3rem; font-weight: bold; color: {text_color}; margin-bottom: 0.5rem;'>
                {misunderstood_count}
            </div>
            <p style='color: {text_color}; margin: 0; opacity: 0.9;'>
                {'Tuy·ªát v·ªùi!' if misunderstood_count == 0 else 'C·∫ßn c·∫£i thi·ªán' if misunderstood_count <= 3 else 'C·∫ßn t·∫≠p trung cao'}
            </p>
        </div>
        """, unsafe_allow_html=True)

def display_concepts_list(profile: dict):
    """
    Hi·ªÉn th·ªã danh s√°ch kh√°i ni·ªám c·∫ßn c·∫£i thi·ªán
    """
    st.markdown("## üìù Danh s√°ch kh√°i ni·ªám c·∫ßn c·∫£i thi·ªán")
    
    misunderstood_concepts = profile.get("misunderstood_concepts", [])
    
    if misunderstood_concepts:
        st.markdown("""
        <div style='background: linear-gradient(135deg, #ffeaa7 0%, #fab1a0 100%); 
                    padding: 1rem; 
                    border-radius: 10px; 
                    margin-bottom: 1.5rem;'>
            <p style='color: #2d3436; margin: 0; text-align: center; font-weight: 500;'>
                üìö D∆∞·ªõi ƒë√¢y l√† nh·ªØng kh√°i ni·ªám m√† h·ªá th·ªëng ph√°t hi·ªán b·∫°n c√≤n g·∫∑p kh√≥ khƒÉn
            </p>
        </div>
        """, unsafe_allow_html=True)
        
        # Hi·ªÉn th·ªã concepts trong grid
        cols = st.columns(2)
        for i, concept in enumerate(misunderstood_concepts):
            col_idx = i % 2
            with cols[col_idx]:
                # M√†u s·∫Øc xoay v√≤ng cho t·ª´ng concept
                colors = [
                    "#FF6B6B", "#4ECDC4", "#45B7D1", "#96CEB4", 
                    "#FECA57", "#FF9FF3", "#54a0ff", "#5f27cd"
                ]
                color = colors[i % len(colors)]
                
                st.markdown(f"""
                <div style='background: linear-gradient(135deg, {color}20, {color}10); 
                            padding: 1rem; 
                            border-radius: 10px; 
                            margin-bottom: 1rem;
                            border-left: 4px solid {color};'>
                    <div style='display: flex; align-items: center;'>
                        <span style='background: {color}; 
                                     color: white; 
                                     border-radius: 50%; 
                                     width: 30px; 
                                     height: 30px; 
                                     display: flex; 
                                     align-items: center; 
                                     justify-content: center; 
                                     margin-right: 0.75rem;
                                     font-weight: bold;'>
                            {i+1}
                        </span>
                        <h4 style='color: #333; margin: 0; flex: 1;'>
                            {concept}
                        </h4>
                    </div>
                </div>
                """, unsafe_allow_html=True)
    else:
        st.markdown("""
        <div style='background: linear-gradient(135deg, #00b894 0%, #00cec9 100%); 
                    padding: 2rem; 
                    border-radius: 15px; 
                    text-align: center;
                    margin-bottom: 1.5rem;'>
            <div style='font-size: 4rem; margin-bottom: 1rem;'>üéâ</div>
            <h3 style='color: white; margin-bottom: 1rem;'>
                Tuy·ªát v·ªùi! Ch∆∞a c√≥ kh√°i ni·ªám n√†o ƒë∆∞·ª£c ƒë√°nh d·∫•u l√† y·∫øu.
            </h3>
            <p style='color: #dff9fb; margin-bottom: 1rem;'>
                ƒêi·ªÅu n√†y c√≥ th·ªÉ c√≥ nghƒ©a l√†:
            </p>
            <div style='background: rgba(255,255,255,0.1); 
                        padding: 1rem; 
                        border-radius: 10px; 
                        margin-bottom: 1rem;'>
                <p style='color: #dff9fb; margin: 0;'>
                    ‚Ä¢ B·∫°n ch∆∞a chat ƒë·ªß v·ªõi gia s∆∞ AI ƒë·ªÉ h·ªá th·ªëng ph√¢n t√≠ch<br>
                    ‚Ä¢ B·∫°n ƒëang l√†m r·∫•t t·ªët v·ªõi c√°c b√†i to√°n ƒë√£ th·∫£o lu·∫≠n
                </p>
            </div>
            <p style='color: #dff9fb; margin: 0;'>
                üí° <strong>G·ª£i √Ω:</strong> H√£y ti·∫øp t·ª•c chat v√† h·ªèi nhi·ªÅu c√¢u h·ªèi to√°n h·ªçc ƒë·ªÉ gia s∆∞ AI c√≥ th·ªÉ ƒë∆∞a ra c√°c ph√¢n t√≠ch v√† ƒë·ªÅ xu·∫•t ph√π h·ª£p nh√©!
            </p>
        </div>
        """, unsafe_allow_html=True)

def display_learning_suggestions(misunderstood_concepts: list):
    """
    Hi·ªÉn th·ªã g·ª£i √Ω h·ªçc t·∫≠p
    """
    if misunderstood_concepts:
        st.markdown("## üéØ G·ª£i √Ω h·ªçc t·∫≠p")
        
        suggestions = [
            {
                "icon": "‚úÖ",
                "title": "T·∫°o b√†i t·∫≠p luy·ªán t·∫≠p",
                "description": "Y√™u c·∫ßu gia s∆∞ AI t·∫°o b√†i t·∫≠p luy·ªán t·∫≠p c·ª• th·ªÉ v·ªÅ c√°c kh√°i ni·ªám y·∫øu",
                "color": "#00b894"
            },
            {
                "icon": "üß†",
                "title": "Gi·∫£i th√≠ch l·∫°i kh√°i ni·ªám",
                "description": "H·ªèi gia s∆∞ AI gi·∫£i th√≠ch l·∫°i c√°c kh√°i ni·ªám kh√≥ hi·ªÉu b·∫±ng c√°ch kh√°c",
                "color": "#6c5ce7"
            },
            {
                "icon": "üìπ",
                "title": "Xem video b√†i gi·∫£ng",
                "description": "Tham kh·∫£o c√°c video b√†i gi·∫£ng ƒë∆∞·ª£c ƒë·ªÅ xu·∫•t theo level ph√π h·ª£p",
                "color": "#fd79a8"
            },
            {
                "icon": "üìÖ",
                "title": "Luy·ªán t·∫≠p ƒë·ªÅu ƒë·∫∑n",
                "description": "D√†nh 15-30 ph√∫t m·ªói ng√†y ƒë·ªÉ th·ª±c h√†nh nh·ªØng kh√°i ni·ªám y·∫øu",
                "color": "#fdcb6e"
            }
        ]
        
        cols = st.columns(2)
        for i, suggestion in enumerate(suggestions):
            col_idx = i % 2
            with cols[col_idx]:
                st.markdown(f"""
                <div style='background: linear-gradient(135deg, {suggestion['color']}20, {suggestion['color']}10); 
                            padding: 1.5rem; 
                            border-radius: 10px; 
                            margin-bottom: 1rem;
                            border-left: 4px solid {suggestion['color']};
                            height: 140px;'>
                    <div style='display: flex; align-items: center; margin-bottom: 0.5rem;'>
                        <span style='font-size: 1.5rem; margin-right: 0.5rem;'>{suggestion['icon']}</span>
                        <h4 style='color: #333; margin: 0;'>{suggestion['title']}</h4>
                    </div>
                    <p style='color: #666; margin: 0; font-size: 0.9rem;'>
                        {suggestion['description']}
                    </p>
                </div>
                """, unsafe_allow_html=True)
        
        # C√°ch s·ª≠ d·ª•ng
        st.markdown("""
        <div style='background: linear-gradient(135deg, #a29bfe 0%, #6c5ce7 100%); 
                    padding: 1.5rem; 
                    border-radius: 10px; 
                    margin-top: 1rem;'>
            <h4 style='color: white; margin-bottom: 1rem; text-align: center;'>
                üí¨ C√°ch s·ª≠ d·ª•ng
            </h4>
            <div style='background: rgba(255,255,255,0.1); 
                        padding: 1rem; 
                        border-radius: 8px;'>
                <p style='color: #ddd; margin: 0; text-align: center;'>
                    Quay l·∫°i trang ch√≠nh v√† n√≥i v·ªõi gia s∆∞ AI:<br>
                    <strong style='color: white;'>"T√¥i mu·ªën luy·ªán t·∫≠p"</strong> ho·∫∑c 
                    <strong style='color: white;'>"Cho t√¥i b√†i t·∫≠p v·ªÅ [t√™n ch·ªß ƒë·ªÅ]"</strong>
                </p>
            </div>
        </div>
        """, unsafe_allow_html=True)

def display_footer():
    """
    Hi·ªÉn th·ªã footer
    """
    st.markdown("---")
    
    col1, col2, col3 = st.columns([1, 2, 1])
    with col2:
        if st.button("üîÑ L√†m m·ªõi d·ªØ li·ªáu", type="primary", use_container_width=True):
            st.rerun()
    
    st.markdown("""
    <div style='background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); 
                padding: 2rem; 
                border-radius: 15px; 
                text-align: center;
                margin-top: 2rem;'>
        <h3 style='color: white; margin-bottom: 1rem;'>
            üí° V·ªÅ h·ªì s∆° h·ªçc t·∫≠p
        </h3>
        <p style='color: #f0f0f0; margin-bottom: 0;'>
            D·ªØ li·ªáu ƒë∆∞·ª£c c·∫≠p nh·∫≠t t·ª± ƒë·ªông khi b·∫°n chat v·ªõi gia s∆∞ AI.<br>
            H·ªì s∆° n√†y gi√∫p c√° nh√¢n h√≥a tr·∫£i nghi·ªám h·ªçc t·∫≠p c·ªßa b·∫°n ƒë·ªÉ ƒë·∫°t hi·ªáu qu·∫£ t·ªët nh·∫•t.
        </p>
    </div>
    """, unsafe_allow_html=True)

def display_login_required():
    """
    Hi·ªÉn th·ªã th√¥ng b√°o c·∫ßn ƒëƒÉng nh·∫≠p
    """
    st.markdown("""
    <div style='background: linear-gradient(135deg, #ff7675 0%, #fd79a8 100%); 
                padding: 2rem; 
                border-radius: 15px; 
                text-align: center;
                margin: 2rem 0;'>
        <div style='font-size: 4rem; margin-bottom: 1rem;'>‚ö†Ô∏è</div>
        <h2 style='color: white; margin-bottom: 1rem;'>
            B·∫°n c·∫ßn ƒëƒÉng nh·∫≠p ƒë·ªÉ xem h·ªì s∆° h·ªçc t·∫≠p
        </h2>
        <p style='color: #ffeaa7; font-size: 1.2rem; margin-bottom: 0;'>
            üëà Vui l√≤ng ƒëƒÉng nh·∫≠p ·ªü sidebar c·ªßa trang ch√≠nh
        </p>
    </div>
    """, unsafe_allow_html=True)

def main():
    """
    H√†m ch√≠nh c·ªßa trang H·ªì s∆° h·ªçc t·∫≠p
    """
    # Ki·ªÉm tra xem ng∆∞·ªùi d√πng ƒë√£ ƒëƒÉng nh·∫≠p ch∆∞a
    if "user" not in st.session_state or st.session_state.user is None:
        display_login_required()
        st.stop()
    
    # Kh·ªüi t·∫°o Supabase client
    supabase = init_supabase_client()
    
    # L·∫•y th√¥ng tin ng∆∞·ªùi d√πng hi·ªán t·∫°i
    user = st.session_state.user
    user_email = user.email
    user_id = user.id
    
    # L·∫•y h·ªì s∆° h·ªçc t·∫≠p
    with st.spinner("ƒêang t·∫£i h·ªì s∆° h·ªçc t·∫≠p..."):
        profile = get_user_profile(supabase, user_id)

    # Ki·ªÉm tra xem profile c√≥ d·ªØ li·ªáu kh√¥ng
    if not profile:
        st.error("Kh√¥ng th·ªÉ t·∫£i ho·∫∑c t·∫°o h·ªì s∆° c·ªßa b·∫°n. Vui l√≤ng th·ª≠ l·∫°i.")
        st.stop()
    
    # Hi·ªÉn th·ªã header
    display_header(user_email, user_id, profile)
    
    # Hi·ªÉn th·ªã ƒëi·ªÉm y·∫øu v√† th·ªëng k√™
    display_weakness_and_stats(profile)
    
    st.markdown("---")
    
    # Hi·ªÉn th·ªã danh s√°ch kh√°i ni·ªám
    display_concepts_list(profile)
    
    # Hi·ªÉn th·ªã g·ª£i √Ω h·ªçc t·∫≠p
    misunderstood_concepts = profile.get("misunderstood_concepts", [])
    display_learning_suggestions(misunderstood_concepts)
    
    # Hi·ªÉn th·ªã footer
    display_footer()

if __name__ == "__main__":
    main()